$comment
	File created using the following command:
		vcd file AdderDemo.msim.vcd -direction
$end
$date
	Sat Mar  9 02:39:52 2024
$end
$version
	Questa Intel Starter FPGA Edition Version 2023.3
$end
$timescale
	1ps
$end

$scope module adderdemo_vhd_vec_tst $end
$var wire 1 ! KEY [0] $end
$var wire 1 " LEDR [14] $end
$var wire 1 # LEDR [13] $end
$var wire 1 $ LEDR [12] $end
$var wire 1 % LEDR [11] $end
$var wire 1 & LEDR [10] $end
$var wire 1 ' LEDR [9] $end
$var wire 1 ( LEDR [8] $end
$var wire 1 ) LEDR [7] $end
$var wire 1 * LEDR [6] $end
$var wire 1 + LEDR [5] $end
$var wire 1 , LEDR [4] $end
$var wire 1 - LEDR [3] $end
$var wire 1 . LEDR [2] $end
$var wire 1 / LEDR [1] $end
$var wire 1 0 LEDR [0] $end
$var wire 1 1 SW [17] $end
$var wire 1 2 SW [16] $end
$var wire 1 3 SW [15] $end
$var wire 1 4 SW [14] $end
$var wire 1 5 SW [13] $end
$var wire 1 6 SW [12] $end
$var wire 1 7 SW [11] $end
$var wire 1 8 SW [10] $end
$var wire 1 9 SW [9] $end
$var wire 1 : SW [8] $end
$var wire 1 ; SW [7] $end
$var wire 1 < SW [6] $end
$var wire 1 = SW [5] $end
$var wire 1 > SW [4] $end
$var wire 1 ? SW [3] $end
$var wire 1 @ SW [2] $end
$var wire 1 A SW [1] $end
$var wire 1 B SW [0] $end

$scope module i1 $end
$var wire 1 C gnd $end
$var wire 1 D vcc $end
$var wire 1 E unknown $end
$var wire 1 F devoe $end
$var wire 1 G devclrn $end
$var wire 1 H devpor $end
$var wire 1 I ww_devoe $end
$var wire 1 J ww_devclrn $end
$var wire 1 K ww_devpor $end
$var wire 1 L ww_LEDR [14] $end
$var wire 1 M ww_LEDR [13] $end
$var wire 1 N ww_LEDR [12] $end
$var wire 1 O ww_LEDR [11] $end
$var wire 1 P ww_LEDR [10] $end
$var wire 1 Q ww_LEDR [9] $end
$var wire 1 R ww_LEDR [8] $end
$var wire 1 S ww_LEDR [7] $end
$var wire 1 T ww_LEDR [6] $end
$var wire 1 U ww_LEDR [5] $end
$var wire 1 V ww_LEDR [4] $end
$var wire 1 W ww_LEDR [3] $end
$var wire 1 X ww_LEDR [2] $end
$var wire 1 Y ww_LEDR [1] $end
$var wire 1 Z ww_LEDR [0] $end
$var wire 1 [ ww_SW [17] $end
$var wire 1 \ ww_SW [16] $end
$var wire 1 ] ww_SW [15] $end
$var wire 1 ^ ww_SW [14] $end
$var wire 1 _ ww_SW [13] $end
$var wire 1 ` ww_SW [12] $end
$var wire 1 a ww_SW [11] $end
$var wire 1 b ww_SW [10] $end
$var wire 1 c ww_SW [9] $end
$var wire 1 d ww_SW [8] $end
$var wire 1 e ww_SW [7] $end
$var wire 1 f ww_SW [6] $end
$var wire 1 g ww_SW [5] $end
$var wire 1 h ww_SW [4] $end
$var wire 1 i ww_SW [3] $end
$var wire 1 j ww_SW [2] $end
$var wire 1 k ww_SW [1] $end
$var wire 1 l ww_SW [0] $end
$var wire 1 m ww_KEY [0] $end
$var wire 1 n \SW[9]~input_o\ $end
$var wire 1 o \SW[8]~input_o\ $end
$var wire 1 p \LEDR[14]~output_o\ $end
$var wire 1 q \LEDR[13]~output_o\ $end
$var wire 1 r \LEDR[12]~output_o\ $end
$var wire 1 s \LEDR[11]~output_o\ $end
$var wire 1 t \LEDR[10]~output_o\ $end
$var wire 1 u \LEDR[9]~output_o\ $end
$var wire 1 v \LEDR[8]~output_o\ $end
$var wire 1 w \LEDR[7]~output_o\ $end
$var wire 1 x \LEDR[6]~output_o\ $end
$var wire 1 y \LEDR[5]~output_o\ $end
$var wire 1 z \LEDR[4]~output_o\ $end
$var wire 1 { \LEDR[3]~output_o\ $end
$var wire 1 | \LEDR[2]~output_o\ $end
$var wire 1 } \LEDR[1]~output_o\ $end
$var wire 1 ~ \LEDR[0]~output_o\ $end
$var wire 1 !! \SW[12]~input_o\ $end
$var wire 1 "! \SW[15]~input_o\ $end
$var wire 1 #! \SW[14]~input_o\ $end
$var wire 1 $! \SW[10]~input_o\ $end
$var wire 1 %! \KEY[0]~input_o\ $end
$var wire 1 &! \inst1|addsub|bit0|cout~0_combout\ $end
$var wire 1 '! \SW[11]~input_o\ $end
$var wire 1 (! \inst1|addsub|bit1|cout~0_combout\ $end
$var wire 1 )! \SW[16]~input_o\ $end
$var wire 1 *! \inst1|addsub|bit2|cout~0_combout\ $end
$var wire 1 +! \SW[13]~input_o\ $end
$var wire 1 ,! \SW[17]~input_o\ $end
$var wire 1 -! \inst1|addsub|bit3|cout~0_combout\ $end
$var wire 1 .! \inst1|addsub|bit3|s~0_combout\ $end
$var wire 1 /! \inst1|addsub|bit2|s~0_combout\ $end
$var wire 1 0! \inst1|addsub|bit1|s~combout\ $end
$var wire 1 1! \inst1|addsub|bit0|s~0_combout\ $end
$var wire 1 2! \SW[2]~input_o\ $end
$var wire 1 3! \SW[0]~input_o\ $end
$var wire 1 4! \SW[1]~input_o\ $end
$var wire 1 5! \SW[5]~input_o\ $end
$var wire 1 6! \SW[4]~input_o\ $end
$var wire 1 7! \inst|bit1|cout~0_combout\ $end
$var wire 1 8! \SW[6]~input_o\ $end
$var wire 1 9! \inst|bit2|cout~0_combout\ $end
$var wire 1 :! \SW[3]~input_o\ $end
$var wire 1 ;! \SW[7]~input_o\ $end
$var wire 1 <! \inst|bit3|cout~0_combout\ $end
$var wire 1 =! \inst|bit3|s~combout\ $end
$var wire 1 >! \inst|bit2|s~0_combout\ $end
$var wire 1 ?! \inst|bit1|s~0_combout\ $end
$var wire 1 @! \inst|bit0|s~combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
1D
xE
1F
1G
1H
1I
1J
1K
xn
xo
xp
xq
xr
xs
xt
0u
0v
0w
0x
0y
xz
x{
x|
x}
x~
x!!
x"!
x#!
x$!
x%!
x&!
x'!
x(!
x)!
x*!
x+!
x,!
x-!
x.!
x/!
x0!
x1!
x2!
x3!
x4!
x5!
x6!
x7!
x8!
x9!
x:!
x;!
x<!
x=!
x>!
x?!
x@!
x[
x\
x]
x^
x_
x`
xa
xb
xc
xd
xe
xf
xg
xh
xi
xj
xk
xl
xm
x!
x"
x#
x$
x%
x&
0'
0(
0)
0*
0+
x,
x-
x.
x/
x0
x1
x2
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
x>
x?
x@
xA
xB
xL
xM
xN
xO
xP
0Q
0R
0S
0T
0U
xV
xW
xX
xY
xZ
$end
#1000000
