library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity LightStimulus is
    port(
        clk : in std_logic;
        reset : in std_logic;
        start : in std_logic;
        randomTime : in std_logic_vector(13 downto 0);
        light : out std_logic;
    );
end LightStimulus;

architecture Behavioral of LightStimulus is
    signal Don : unsigned(13 downto 0) := (others => '0');
    signal light_active : std_logic := '0';
    signal react_start : unsigned(13 downto 0) := (others => '0');
    signal react_time : unsigned(13 downto 0) := (others => '0');

begin
    process(clk)
    begin
        if rising_edge(clk) then
            if reset = '1' then
                Don <= (others => '0');
                light_active <= '0';
                react_start <= (others => '0');
                react_time <= (others => '0');

            else
                if (start = '1' and light_active = '0') then
                    Don <= unsigned(randomTime);
                elsif (randomTime >= Don and light_active = '1') then
                    react_start <= Don;
                    light_active <= '1';
                elsif (light_active = '1' and start = '1') then
                    react_time <= react_start - timer;
                    light_active <= '0';

                end if;
            end if;
        end if;
    end process;

    light <= light_active;
end Behavioral;